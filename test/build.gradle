buildscript {
	repositories {
		maven {
			url = "https://maven.minecraftforge.net"
		}
		maven {
			url = "https://maven.parchmentmc.org"
		}
		maven {
			url = "https://repo.u-team.info"
		}
		maven {
			url = "file:///${projectDir}/../build/mavenRepo"
		}
		mavenCentral()
	}
	dependencies {
		classpath group: "org.parchmentmc", name: "librarian", version: "1.+", changing: true
		classpath group: "info.u-team.gradle_files", name: "gradle_files", version: "1.0.+", changing: true
		classpath group: "info.u-team.curse_gradle_uploader", name: "curse_gradle_uploader", version: "1.4.1"
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.parchmentmc.librarian.forgegradle"
apply plugin: "info.u_team.gradle_files"
apply plugin: "info.u_team.curse_gradle_uploader"
apply plugin: "maven-publish"

group = "info.u-team"
archivesBaseName = gradlefiles.archivesBaseName()
version = gradlefiles.version()

gradlefiles {
	vendor "Team UTeam"
	
	signJars true
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	withDeobfJar()
	withSourcesJar()
	withJavadocJar()
}

minecraft {
	mappings channel: config.forge.mapping_channel, version: config.forge.mapping
	
	runs {
		client {
			workingDirectory file("run/client")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
			}
		}
		server {
			workingDirectory file("run/server")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
			}
		}
		data {
			workingDirectory file("run/data")
			
			args "--mod", config.mod.modid
			args "--all"
			args "--output", file("src/generated/resources")
			args "--validate"
			args "--existing", file("src/main/resources")
			
			mods {
				"${config.mod.modid}" {
					source sourceSets.main
				}
			}
		}
	}
}

tasks.withType(Jar) { task ->
	gradlefiles.defaultJar(task)
}

dependencies {
	minecraft gradlefiles.forgeDependency()
	
	implementation "net.harawata:appdirs:1.0.0"
	implementation fg.deobf("info.u-team:u_team_core-1.18.1:4.0.0.201-SNAPSHOT")
}

publishing {
	repositories {
		maven {
			url layout.buildDirectory.dir("mavenRepo")
		}
	}
	publications {
		mavenJava(MavenPublication) {
			artifactId archivesBaseName
			
			from components.java
		}
	}
}
